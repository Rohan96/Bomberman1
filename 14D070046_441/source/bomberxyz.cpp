#include<simplecpp>
#include <cstdlib>
#include <iostream>
#include <ctime>
#include<stdio.h>
using namespace std;

//Designing the level using 2-D Array

int level1[13][16]=
{
    {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
    {2,0,0,0,0,0,1,0,1,0,0,1,0,1,2,2},
    {2,0,2,0,2,0,2,0,2,1,2,0,2,1,0,2},
    {2,0,1,0,0,0,0,1,0,0,1,0,0,0,0,2},
    {2,0,2,0,2,0,2,0,2,0,2,0,2,1,1,2},
    {2,0,0,1,0,0,0,0,0,0,1,0,0,0,0,2},
    {2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,2},
    {2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2},
    {2,0,2,1,2,1,2,0,2,0,2,0,2,0,1,2},
    {2,0,0,0,0,1,0,0,0,0,0,1,0,0,0,2},
    {2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,2},
    {2,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2},
    {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2}

};



//Function for checking if bomberman has picked up the powerup or not,the result is generated by matching the coordinates of bomberman and
//powerup.

bool powerupfound(int x13,int y13,int px,int py)

{

    if(x13==px && y13==py)

        return true;

    else

        return false;

}

/*Function for checking that has the bomberman reached the door or not.*/

bool doorfound(int x12,int y12,int dx,int dy)

{

    if(x12==dx && y12==dy)

        return true;

    else

        return false;

}

/*Function for movement of enemies,which is based upon total random motion.*/

void movement(Circle &c2,int x4,int y4,int m)

{

    bool mov=false;

    if(m==0)

    {

        if(level1[(y4-142-16)/32-1][(x4-142-13)/26]!=0)

            m++;

        else

        {

            c2.move(0,-32);

            mov=true;
        }

    }


    else if(m==1)

    {

        if(level1[(y4-142-16)/32][(x4-142-13)/26+1]!=0)

            m++;

        else

        {

            c2.move(26,0);

            mov=true;

        }

    }

    else if(m==2)

    {

        if(level1[(y4-142-16)/32+1][(x4-142-13)/26]!=0)

            m++;

        else

        {

            c2.move(0,32);

            mov=true;

        }

    }

    else if(m==3)

    {

        if(level1[(y4-142-16)/32][(x4-142-13)/26-1]!=0)

            m=0;
        else

        {

            c2.move(-26,0);

            mov=true;

        }

    }


}

/*Function for checking that if two circles overlap or not which in turn helps to
verify if bomberman has met any enemy during movement*/

bool circleproximity (int x4,int y4,int x5,int y5)

{

    bool check=false;

    int ab;

    if(x4==x5&&y4==y5)

    {

        check=true;

    }

    return check;

}

/*Function for checking that has any circle reached a coordinate,which in turn helps to know that if any enemy or bomberman is in
vicinity of the bomb while exploding.*/

bool checkproximity(Circle c1,int x,int y)

{

    int x2=c1.getX();

    int y2=c1.getY();

    bool check=false;

    int ij,jk;

    for(ij=-1; ij<=1; ij++)

    {

        if(x2==x && y2==y+32*ij)

        {

            check=true;

        }

    }

    if(x2==x && y2==y)

    {

        check=true;

    }

    for(ij=-1; ij<=1; ij++)

    {

        if(x2==x+26*ij && y2==y)

        {

            check=true;

        }

    }

    return check;

}

/*Function to check if the bomberman has collected the key or not.*/

bool keyfound(int xb,int yb,int kx,int ky)

{
    if(xb==kx&&yb==ky)

        return true;

    else

        return false;
}

main_program

{

    /*Designing the window*/

    initCanvas("bomberman",1000,700);

    Text t11(350,100,"BOMBERMAN");

     bool doorf=false;

    /*Declaring the variables*/

    const double bux=350,buy=250,bw=150,bh=50,bux1=350,buy1=400,bux2=350,buy2=550;

    Rectangle buttonplay(bux,buy,bw,bh);

    Text tplay(bux,buy,"PLAY GAME");

    Rectangle instructions(bux1,buy1,bw,bh);

    Text inst(bux1,buy1,"INSTRUCTIONS");

    while(1)

    {

        int clickpos=getClick();

        int cx=clickpos/65536;

        int cy=clickpos%65536;

        Text t66;

        int cx1=clickpos/65536;

        int cy1=clickpos%65536;

        if(bux1-bw/2<=cx1 && cx1<=bux1+bw/2 && buy1-bh/2<=cy1 && cy1<=buy1+bh/2)

        {

            Text tinst(700,400,"-:The bomberman's aim is to kill all the enemies and collect the key");

            Text tinst1(700,415," and has to walk through the door in order to cross the level,the ");

            Text tinst2(700,430,"bomberman can be controlled by W,A,S,D and bomb can be planted by pressing B.");

            wait(5);

            tinst.hide();

            tinst1.hide();

            tinst2.hide();

        }


        if(bux-bw/2<=cx && cx<=bux+bw/2 && buy-bh/2<=cy && cy<=buy+bh/2)

        {

            buttonplay.hide();

            t11.hide();

            tplay.hide();

            instructions.hide();

            inst.hide();

            int t2,dead1=0,dead2=0,dead3=0,power=0,blife=3,scorelost=0,i,j,noe=3,score,tforscore=0,bricksbroken=0;

            Text t9;

            Rectangle box[13][16],box1[13][16];

            int t,x,y,x9,y9,life=3,x99,y99,x91,x92,x93,y91,y92,y93;

            bool powerupav=true,bisdead=false,e1isdead=false,e2isdead=false,e3isdead=false;

            /*Designing the graphics part of the level by assigning the passable blocks = 0 ,the breakable bricks =1 and Light Grey Color and
            the unbreakable bricks =2 and a Dark Grey Color.A Black colored boundary is also provide for all the blocks.*/

            for(i=0; i<13; i++)

            {

                for(j=0; j<16; j++)

                {

                    if(level1[i][j]==1)

                    {

                        box[i][j].reset(142+26*j+13,142+32*i+16,26,32);

                        box[i][j].setFill(true);

                        box[i][j].setColor(COLOR("LIGHTGREY"));

                        box1[i][j].reset(142+26*j+13,142+32*i+16,26,32);

                        box1[i][j].setFill(false);

                        box1[i][j].setColor(COLOR("BLACK"));

                    }

                    else if(level1[i][j]==2)

                    {

                        box[i][j].reset(142+26*j+13,142+32*i+16,26,32);

                        box[i][j].setFill(true);

                        box[i][j].setColor(COLOR("DARKGREY"));

                        box1[i][j].reset(142+26*j+13,142+32*i+16,26,32);

                        box1[i][j].setFill(false);

                        box1[i][j].setColor(COLOR("BLACK"));

                    }

                    else if(level1[i][j]==0)

                    {

                        box[i][j].reset(142+26*j+13,142+32*i+16,26,32);

                        box[i][j].setFill(true);

                        box[i][j].setColor(COLOR("GREEN"));

                        box1[i][j].reset(142+26*j+13,142+32*i+16,26,32);

                        box1[i][j].setFill(false);

                        box1[i][j].setColor(COLOR("BLACK"));

                    }

                }

            }

            /*Detailing the window by putting up all the controls on the game panel*/

            Text t7(142,50,"Controls");

            Circle control(250,50,10);

            control.setFill(true);

            control.setColor(COLOR("BLACK"));

            Text t11(250,30,"W");

            Text t13(230,50,"A");

            Text t14(270,50,"D");

            Text t15(250,70,"S");

            /*Designing the bombs*/

            Circle bombs(550,100,10);

            bombs.setFill(true);

            bombs.setColor(COLOR("RED"));

            Text tb(400,50,"TO PLANT BOMB PRESS B");

            Text tp(580,80,"COLLECT THE POWERUP TO BECOME INVINCIBLE ,BY BREAKING BRICKS. ");

            Text t65(400,130,"SCORE");

            Text t3,t4;

            int invinci=100,invinci1;

            /*Designing the bomberman as White colored circles.*/

            Circle bomberman(142+26+13,142+32+16,13);

            bomberman.setFill(true);

            bomberman.setColor(COLOR("WHITE"));

            /*Designing the enemies as Blue colored circles.*/

            Circle enemy1(142+26*4+13,142+32*11+16,13);

            enemy1.setFill(true);

            enemy1.setColor(COLOR("BLUE"));

            Circle enemy2(142+26*13+13,142+32*5+16,13);

            enemy2.setFill(true);

            enemy2.setColor(COLOR("BLUE"));

            int i7;

            Circle enemy3(142+26*5+13,142+32*4+16,13);

            enemy3.setFill(true);

            enemy3.setColor(COLOR("BLUE"));

            /*Designing the powerup as Red colored circle.*/

            Circle powerup(142+26*10+13,142+32*11+16,13);

            powerup.setFill(true);

            powerup.setColor(COLOR("RED"));

            powerup.hide();

            /*Designing the key door and the key as Yellow and Brown colored rectangles.*/


            Rectangle key(142+26*10+13,142+32*6+16,5,8);

            key.setFill(true);

            key.setColor(COLOR("YELLOW"));

            key.hide();

            Text t10(142,130,"lives left");

            Rectangle door(142+26*2+13,142+32*4+16,13,26);

            door.setFill(true);

            door.setColor(COLOR("BROWN"));

            door.hide();

            int keytemp=0;

            /*Defining the bomb Array.*/

            Circle bomb[100];

            for(int i4=0; i4<100; i4++)

            {

                bomb[i4].reset(100,100,7);

                bomb[i4].hide();

                bomb[i4].setFill(true);

                bomb[i4].setColor(COLOR("BLACK"));

            }

            int bombe=0 ;

            int j3=0;

            /*Introducing the XEvent class so as to take input from keyboard.*/

            XEvent event;

            while(1)

            {

                Text t11(200,130,blife);

                Text t78(430,130,scorelost);

                /*Introducing the checkEvent to keep a check on whether a event has happened or not.*/

                if(checkEvent(event))

                {

                    x=bomberman.getX();

                    y=bomberman.getY();

                    /*Introducing the keyPressEvent function to check whether a keyboard event has happened or not. */

                    if(keyPressEvent(event))

                    {
                        /*Introducing the charFromEvent to fetch the key pressed on the keyboard and also programming the
                          bomberman to move according to the input and also according to the maze .*/

                        if(charFromEvent(event)=='w')

                        {

                            if(level1[(y-158)/32-1][(x-155)/26]==0)

                            {

                                bomberman.move(0,-32);

                            }

                            else

                            {

                                bomberman.move(0,0);

                            }

                        }

                        if(charFromEvent(event)=='s')

                        {

                            if(level1[(y-158)/32+1][(x-155)/26]==0)

                            {

                                bomberman.move(0,32);

                            }

                            else

                            {

                                bomberman.move(0,0);

                            }

                        }

                        if(charFromEvent(event)=='d')

                        {

                            if(level1[(y-158)/32][(x-155)/26+1]==0)

                            {

                                bomberman.move(26,0);

                            }

                            else

                            {

                                bomberman.move(0,0);

                            }

                        }


                        if(charFromEvent(event)=='a')

                        {

                            if(level1[(y-158)/32][(x-155)/26-1]==0)

                            {

                                bomberman.move(-26,0);

                            }

                            else

                            {

                                bomberman.move(0,0);

                            }

                        }

                        /*Introducing the planting of bombs by pressing B on keyboard.*/

                        if(charFromEvent(event)=='b')

                        {

                            if(bombe==0)//so user can plant only one bomb at a time


                            {


                                t=0;

                                bomb[j3].moveTo(x,y);

                                bomb[j3].show();


                                x99=x;

                                y99=y;

                                level1[(y99-158)/32][(x99-155)/26]=2;

                            }

                            bombe=1;

                        }



                    }

                }

                x=bomberman.getX();

                y=bomberman.getY();

                srand(time(0));


                /*Programming the movement of enemies,by calling the movement function defined above.*/


                if(e1isdead==false)

                {

                    if(dead1==0)

                    {

                        int m=rand()%4;

                        x9=enemy1.getX();

                        y9=enemy1.getY();

                        movement(enemy1,x9,y9,m);

                        x91=enemy1.getX();

                        y91=enemy1.getY();

                    }

                }

                if(e2isdead==false)

                {

                    if(dead2==0)

                    {

                        int m=(2*rand())%4;

                        x9=enemy2.getX();

                        y9=enemy2.getY();

                        movement(enemy2,x9,y9,m);

                        x92=enemy2.getX();

                        y92=enemy2.getY();

                    }

                }


                if(e3isdead==false)

                {

                    if(dead3==0)

                    {

                        int m=(3*rand())%4;

                        x9=enemy3.getX();

                        y9=enemy3.getY();

                        movement(enemy3,x9,y9,m);

                        x93=enemy3.getX();

                        y93=enemy3.getY();

                    }

                }

                /*Programming to kill all the entities in the vicinity of the bomb and killing the bomberman when he comes in contact
                 in any of the enemy and also reducing one of it's lives.*/

                if(power==0) // if powerup is inactive


                {

                    bisdead=(circleproximity(x,y,x91,y91)||circleproximity(x,y,x92,y92)||circleproximity(x,y,x93,y93));

                    if(bisdead==true)

                    {


                        bisdead=false;// resets it to false

                        blife--;

                        /*Ending the game when lives=0.*/

                        if(blife==0)

                        {
                            /*Hiding all the things after the game ends*/

                            powerup.hide();

                            door.hide();

                            bomberman.hide();//hides the bomberman


                            enemy1.hide();

                            enemy2.hide();

                            enemy3.hide();

                            bomb[j3].hide();

                            t10.hide();

                            t11.hide();

                            for(i=0; i<13; i++)

                            {

                                for(j=0; j<16; j++)

                                {

                                    box[i][j].hide();

                                    box1[i][j].hide();

                                }

                            }


                            /*Displaying to the user his status and final score*/

                            t9.reset(350,350,"GAME OVER YOU LOSE");

                            wait(2);

                            t9.hide();

                            Text sc1(270,370,"SCORE");

                            Text sc(350,370,scorelost);


                            wait(2);
                            break;

                        }

                        if(dead1==0)

                            enemy1.moveTo(142+26*4+13,142+32*11+16);//moves back to initial position

                        if(dead2==0)

                            enemy2.moveTo(142+26*13+13,142+32*5+16);

                        if(dead3==0) //checks if enemy 3 is dead ;


                            enemy3.moveTo(142+26*5+13,142+32*4+16);

                        bomberman.hide();

                        wait(2);//so user realises he has lost one life


                        /*Restoring the Bomberman after dying but only if left lives!=0.*/

                        bomberman.moveTo(142+26*1+13,142+32*1+16);

                        bomberman.show();



                    }

                }

                x91=x92=x93=y91=y92=y93=0;

                wait(0.2);

                /*Exploding the bomb*/

                if(t==10)//explodes when variable reaches value 10


                {

                    bombe=0;//becomes 0 after bomb explodes


                    bomb[j3].hide();

                    level1[(y99-158)/32][(x99-155)/26]=0;

                    //for the exploding effect//

                    for(i7=-1; i7<=1; i7++)

                    {

                        box[(y99-158)/32+i7][(x99-155)/26].setColor(COLOR("RED"));

                    }

                    for(i7=-1; i7<=1; i7++)

                    {

                        box[(y99-158)/32][(x99-155)/26+i7].setColor(COLOR("RED"));

                    }


                    wait(1);

                    for(i7=-1; i7<=1; i7++)

                    {

                        if(level1[(y99-158)/32+i7][(x99-155)/26]==0)
                            box[(y99-158)/32+i7][(x99-155)/26].setColor(COLOR("GREEN"));

                        if(level1[(y99-158)/32+i7][(x99-155)/26]==1)

                        {

                            if((y99-158)/32+i7==11 && (x99-155)/26==10)

                                powerup.show();

                            box[(y99-158)/32+i7][(x99-155)/26].setColor(COLOR("GREEN"));

                            level1[(y99-158)/32+i7][(x99-155)/26]=0;

                            bricksbroken++;

                        }

                        if(level1[(y99-158)/32+i7][(x99-155)/26]==2)

                            box[(y99-158)/32+i7][(x99-155)/26].setColor(COLOR("DARKGREY"));



                    }

                    for(i7=-1; i7<=1; i7++)

                    {

                        if(level1[(y99-158)/32][(x99-155)/26+i7]==0)

                            box[(y99-158)/32][(x99-155)/26+i7].setColor(COLOR("GREEN"));

                        if(level1[(y99-158)/32][(x99-155)/26+i7]==1)

                        {

                            if((y99-158)/32==11 && (x99-155)/26+i7==10)//if bomb breaks the brick containing powerup


                                powerup.show();

                            box[(y99-158)/32][(x99-155)/26+i7].setColor(COLOR("GREEN"));

                            level1[(y99-158)/32][(x99-155)/26+i7]=0;

                            bricksbroken++;

                        }


                        if(level1[(y99-158)/32][(x99-155)/26+i7]==2)

                            box[(y99-158)/32][(x99-155)/26+i7].setColor(COLOR("DARKGREY"));



                    }

                    bomb[j3].moveTo(100,100);

                    bisdead=checkproximity(bomberman,x99,y99);//checks if bomb kills character


                    e1isdead=checkproximity(enemy1,x99,y99);

                    e2isdead=checkproximity(enemy2,x99,y99);

                    e3isdead=checkproximity(enemy3,x99,y99);

                    x99=y99=0;

                }

                if(bisdead==true) // checks if dead

                {

                    bisdead=false;

                    blife--;

                    if(blife==0)

                    {

                        for(i=0; i<13; i++)

                        {

                            for(j=0; j<16; j++)

                            {

                                box[i][j].hide();

                                box1[i][j].hide();

                            }

                        }

                        door.hide();

                        bomberman.hide();

                        enemy1.hide();

                        enemy2.hide();

                        enemy3.hide();

                        bomb[j3].hide();

                        t10.hide();

                        t11.hide();


                        powerup.hide();

                        bomb[j3].hide();

                        t9.reset(350,350,"GAME OVER YOU LOSE");

                        wait(2);

                        t9.hide();
                        break;

                    }

                    if(dead1==0)

                        enemy1.moveTo(142+26*4+13,142+32*11+16);

                    if(dead2==0)

                        enemy2.moveTo(142+26*13+13,142+32*5+16);

                    if(dead3==0)

                        enemy3.moveTo(142+26*5+13,142+32*4+16);

                    bomberman.hide();

                    bomb[j3].hide();

                    wait(2);

                    bomberman.moveTo(142+26*1+13,142+32*1+16);

                    bomberman.show();



                }


                if(e1isdead==true)

                {

                    enemy1.hide();

                    enemy1.moveTo(670,670);

                    noe=noe-1;

                    dead1=1;

                    e1isdead=false;
                }

                if(e2isdead==true)// if dead moves out of level so no further interaction with game

                {

                    enemy2.hide();

                    enemy2.moveTo(670,670);

                    noe=noe-1;

                    dead2=1;

                    e2isdead=false;

                }

                if(e3isdead==true)

                {

                    enemy3.hide();

                    enemy3.moveTo(670,670);

                    noe=noe-1;

                    dead3=1;

                    e3isdead=false;

                }

                if(noe==0&&keytemp==0)

                {

                    level1[6][10]=0;

                    box[6][10].setColor(COLOR("GREEN"));

                    key.show();
                }

                bool keyf;

                bool pow;

                if(powerupav==true) // checks if power up is available

                {

                    pow=powerupfound(x,y,142+26*10+13,142+32*11+16);//checks if bomberman has found the powerup


                    if(pow==true)

                    {

                        power=1;

                        t2=0;

                        powerup.hide();

                        t3.reset(142,100,"BOMBERMAN IS NOW INVINCIBLE FOR ");

                        powerupav=false; // tells that powerup is gone


                    }

                }

                if(power==1) // if power up is active

                {

                    invinci=invinci-2; // time while it is invincible

                    invinci1=invinci/10;

                    t66.reset(240,100,invinci1);//shows invincibility timer of 10 seconds


                }


                if(t2==50) // at this point powerup is inactive


                {

                    power=0; // makes powerup inactive

                    t66.hide();

                    t3.hide();

                    t4.reset(142,100,"BOMBERMAN CAN NOW BE HARMED BY ENEMIES");

                }



                keyf=keyfound(x,y,142+26*10+13,142+32*6+16);

                if(keyf)

                {

                    key.hide();

                    keytemp=1;

                    level1[4][2]=0;

                    box[4][2].setColor(COLOR("GREEN"));

                    door.show();

                }



                doorf=doorfound(x,y,142+26*2+13,142+32*4+16);// checks if door is found;


                if(doorf==true) // exits game


                {

                    for(i=0; i<13; i++)

                    {

                        for(j=0; j<16; j++)

                        {

                            box[i][j].hide();

                            box1[i][j].hide();

                        }

                    }

                    door.hide();

                    bomberman.hide();

                    bomb[j3].hide();



                    powerup.hide();

                    score=1000000/tforscore + 25*bricksbroken;

                    Text T(350,350,"YOU WON");

                    wait(2);

                    T.hide();

                    Text T1(350,350,"SCORE :");

                    Text T2(400,350,score);

                    wait(2);
                    break;


                }

                t++;

                tforscore++;

                if(power==1)
                    t2++;

                scorelost=25*bricksbroken;// score


            }

        }

        else

        {

            Text t20(350,50,"click on the buttons to proceed");

            wait(2);

            t20.hide();

        }
        if(doorf==true)
            break;

    }

}






